#include <bits/stdc++.h>

#define LL          long long int
#define ULL         unsigned long long int
#define in          cin
#define out         cout
#define pb          push_back
#define ppb         pop_back
#define PI          acos(-1.0)
#define xx          first
#define yy          second
#define mkp         make_pair

#define FOR(I,A,B)  for(int I = (A); I < (B); ++I)
#define REP(I,N)    FOR(I,0,N)
#define ALL(A)      ((A).begin(), (A).end())
#define s(a)        scanf("%d",&a);
#define p(a)        printf("%d",a);
#define pf          printf
#define pln         printf("\n");
#define MAX         50
using namespace std;

vector<int> graph[100001];
int color[100001];
int visited[100001];
int counter;
void color_set(int node,int num){

    if(!visited[node]){
        counter++;
        color[node]=num;
        visited[node]=1;
        queue<int> q;
        int len = graph[node].size();
        for (int i=0 ; i < len ; i++){
            int v = graph[node][i];
            if(!visited[v]){
                q.push(v);
            }
        }
        while(!q.empty()){
            color_set(q.front(),(num+1)%2);
            q.pop();
        }
    }
}

int main(){
    memset(visited,0,sizeof(visited));
    int n;cin>>n;
    for(int i = 0 ; i < n-1 ; i++){
        int u,v;cin>>u>>v;u--;v--;
        graph[u].pb(v);
        graph[v].pb(u);
    }
    color_set(0,1);
    if(counter!=n){
        for (int i=0 ; i < n ; i++){
            if(!visited[i]){
                color_set(i,1);
            }
        }
    }
    
    
    for(int i = 0 ; i < n ; i++){
        cout<<i+1<<" "<<color[i]<<endl;
    }

    return 0;
}
