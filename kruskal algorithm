#include <bits/stdc++.h>

#define LL          long long int
#define ULL         unsigned long long int
#define in          cin
#define out         cout
#define pb          push_back
#define ppb         pop_back
#define PI          acos(-1.0)
#define xx          first
#define yy          second
#define mkp         make_pair

#define FOR(I,A,B)  for(int I = (A); I < (B); ++I)
#define REP(I,N)    FOR(I,0,N)
#define ALL(A)      ((A).begin(), (A).end())
#define s(a)        scanf("%d",&a)
#define p(a)        printf("%d",a)
#define pf          printf
#define pln         printf("\n")
#define IO          freopen("input","r",stdin)

#define MAX         10000

using namespace std;

struct Nodetype{
    int u,v,w;
    bool operator<(const Nodetype& b) const{
        return w < b.w;
    }
};
int par[MAX];
vector<Nodetype> edge;

int Find(int a){
    if(par[a] != a) return par[a] = Find(par[a]);
    return a;
}

int mst(int n){

    sort(edge.begin(),edge.end());

    for ( int i = 1 ; i <= n ; i++ ){
        par[i] = i;
    }

    int cnt = 0,cost=0,sz = edge.size();

    for ( int i = 0 ; i < sz ; i++ ){
        int u = edge[i].u;
        int v = edge[i].v;
        int w = edge[i].w;

        u = Find(u);
        v = Find(v);
        if(u != v){
            cnt++;
            par[v] = u;
            cost+=w;
            if(cnt == n-1)break;
        }

    }
    return cost;
}



int main(){

    int n,m;
    cin>>n>>m;


    for ( int i = 0 ; i < m ; i++ ){
        Nodetype node;
        int u,v,w;
        cin>>u>>v>>w;
        node.u = u;
        node.v = v;
        node.w = w;

        edge.pb(node);
    }
    cout<<mst(n)<<endl;

    return 0;
}

